<project name="FluidBuildUtils">
    <description>
        Utilities used by the Infusion and Engage builds
    </description>

    <target name="clean" description="Cleans up all build-related artifacts and products.">
        <delete dir="${build}" />
        <delete dir="${products}" />
    </target>

    <target name="buildWAR" description="Builds a WAR file using maven given 3 parameters. tofile: the full path to the warfile to be created; fromdir: the directory containing the content to be placed in the war; warfile: the name of the warfile that is created from the maven task">
      <condition property="isWindows">
        <os family="windows" />
      </condition>
      <antcall target="invokeMavenForWAR">
          <param name="fromdir" value="${fromdir}" />
      </antcall>
      <antcall target="invokeMavenForWARWindows">
          <param name="fromdir" value="${fromdir}" />
      </antcall>
      <echo>Copying war file ...</echo>
      <copy tofile="${tofile}" file="${fromdir}/target/${warfile}" />
    </target>

    <!-- Uses maven to create a WAR file on a non-Windows operating system. Expects 'fromdir' to be set. -->
    <target name="invokeMavenForWAR" unless="isWindows">
      <echo>Building war file... ${fromdir} </echo>
      <apply executable="mvn" dir="${fromdir}" parallel="true">
          <fileset  dir=".">
              <include name="pom.xml"/>
          </fileset>
          <arg value="install" />
      </apply>
    </target>
  
    <!-- Uses maven to create a WAR file on a Windows operating system. Expects 'fromdir' to be set. -->
    <target name="invokeMavenForWARWindows" if="isWindows">
      <apply executable="cmd" dir="${fromdir}" parallel="true" vmlauncher="false">
          <fileset  dir=".">
              <include name="pom.xml"/>
          </fileset>
          <arg value="/c mvn.bat install" />
      </apply>
    </target>

    <target name="minify">
        <apply executable="java" dest="${toDir}"  parallel="false">
            <!-- The files to act upon. -->  
            <fileset dir="${fromDir}" casesensitive="no">
              <include name="**/${file-pattern}" />
              <exclude name="**/test/*" />
            </fileset>
    
            <arg line="-jar" />
            <arg path="${yuicompressor}" />
            <srcfile/>
            <arg line="--nomunge" />
            <!-- -o option for YUI Compressor to output minified JS to a file instead of stdout. -->
            <arg line="${lineBreakArg}" />
            <arg line="-o" />
            <mapper type="glob" from="${file-pattern}" to="${file-pattern}" />
            <targetfile /> 
        </apply>
    </target>    
    
</project>
